version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_POSTGRESDB_USER:-n8n}
      POSTGRES_PASSWORD: ${DB_POSTGRESDB_PASSWORD:-n8n}
      POSTGRES_DB: ${DB_POSTGRESDB_DATABASE:-n8n}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  n8n:
    image: n8nio/n8n:1.43.1
    restart: unless-stopped
    ports:
      - "${N8N_PORT:-5678}:5678"
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: ${DB_POSTGRESDB_PORT:-5432}
      DB_POSTGRESDB_DATABASE: ${DB_POSTGRESDB_DATABASE:-n8n}
      DB_POSTGRESDB_USER: ${DB_POSTGRESDB_USER:-n8n}
      DB_POSTGRESDB_PASSWORD: ${DB_POSTGRESDB_PASSWORD:-n8n}
      N8N_HOST: ${N8N_HOST:-localhost}
      N8N_PORT: ${N8N_PORT:-5678}
      N8N_PROTOCOL: http
      WEBHOOK_URL: http://${N8N_HOST:-localhost}:${N8N_PORT:-5678}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - postgres

  app:
    build: .
    command: npm start
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      APP_PORT: ${APP_PORT:-3000}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
    depends_on:
      - redis
  
  django:
    image: python:3.12-slim
    working_dir: /app
    command: bash -c "pip install -r requirements.txt && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./dashboard:/app
    ports:
      - "${DJANGO_PORT:-8000}:8000"
    environment:
      N8N_WEBHOOK_URL: ${N8N_WEBHOOK_URL:-http://n8n:5678/webhook/publish}
    depends_on:
      - n8n

  redis:
    image: redis:7-alpine
    restart: unless-stopped

volumes:
  postgres_data:
  n8n_data:
